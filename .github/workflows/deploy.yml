name: Deploy to S3

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1

jobs:
  terraform-to-test:
    runs-on: ubuntu-latest
    environment: test  # Reference to the test environment in your repository settings
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials for test
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init (Test)
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan (Test)
        env:
          TF_VAR_s3_bucket_name: ${{ secrets.TEST_S3_BUCKET_NAME }} 
          TF_VAR_allowed_ips: ${{ secrets.ALLOWED_IPS }} 
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform Apply to Test
        env:
          TF_VAR_s3_bucket_name: ${{ secrets.TEST_S3_BUCKET_NAME }}
          TF_VAR_allowed_ips: ${{ secrets.ALLOWED_IPS }}
        run: terraform apply -auto-approve
        working-directory: ./terraform

  build-and-deploy-to-test:
    runs-on: ubuntu-latest
    needs: terraform-to-test
    environment: test  # Reference to the test environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Upload to Test S3
        run: |
          npm install
          npm run build
          aws s3 sync ./dist s3://${{ secrets.TEST_S3_BUCKET_NAME }} --delete

  terraform-to-prod:
    runs-on: ubuntu-latest
    needs: build-and-deploy-to-test  # Ensure test deploy happens before prod
    environment:
      name: production  # Reference to the production environment in your repository settings
      url: https://www.ayyappasannidhi.com  # Optional: A URL for the production environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials for production
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init (Production)
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan (Production)
        env:
          TF_VAR_s3_bucket_name: ${{ secrets.PROD_S3_BUCKET_NAME }} 
          TF_VAR_allowed_ips: ${{ secrets.ALLOWED_IPS }} 
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform Apply to Production
        env:
          TF_VAR_s3_bucket_name: ${{ secrets.PROD_S3_BUCKET_NAME }}
          TF_VAR_allowed_ips: ${{ secrets.ALLOWED_IPS }}
        run: terraform apply -auto-approve
        working-directory: ./terraform

  build-and-deploy-to-prod:
    runs-on: ubuntu-latest
    needs: terraform-to-prod
    environment: production  # Reference to the production environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Upload to Production S3
        run: |
          npm install
          npm run build
          aws s3 sync ./dist s3://${{ secrets.PROD_S3_BUCKET_NAME }} --delete